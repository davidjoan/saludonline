<?php

/**
 * BaseProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $dni
 * @property string $firstname
 * @property string $lastname
 * @property date $date_of_birth
 * @property string $gender
 * @property string $image
 * @property string $description
 * @property string $type
 * @property string $blood_type
 * @property string $marital_status
 * @property string $active
 * @property Doctrine_Collection $Patients
 * @property Doctrine_Collection $Weights
 * @property Doctrine_Collection $Heights
 * @property Doctrine_Collection $Treatments
 * @property Doctrine_Collection $PatientProfile
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getDni()            Returns the current record's "dni" value
 * @method string              getFirstname()      Returns the current record's "firstname" value
 * @method string              getLastname()       Returns the current record's "lastname" value
 * @method date                getDateOfBirth()    Returns the current record's "date_of_birth" value
 * @method string              getGender()         Returns the current record's "gender" value
 * @method string              getImage()          Returns the current record's "image" value
 * @method string              getDescription()    Returns the current record's "description" value
 * @method string              getType()           Returns the current record's "type" value
 * @method string              getBloodType()      Returns the current record's "blood_type" value
 * @method string              getMaritalStatus()  Returns the current record's "marital_status" value
 * @method string              getActive()         Returns the current record's "active" value
 * @method Doctrine_Collection getPatients()       Returns the current record's "Patients" collection
 * @method Doctrine_Collection getWeights()        Returns the current record's "Weights" collection
 * @method Doctrine_Collection getHeights()        Returns the current record's "Heights" collection
 * @method Doctrine_Collection getTreatments()     Returns the current record's "Treatments" collection
 * @method Doctrine_Collection getPatientProfile() Returns the current record's "PatientProfile" collection
 * @method Profile             setId()             Sets the current record's "id" value
 * @method Profile             setDni()            Sets the current record's "dni" value
 * @method Profile             setFirstname()      Sets the current record's "firstname" value
 * @method Profile             setLastname()       Sets the current record's "lastname" value
 * @method Profile             setDateOfBirth()    Sets the current record's "date_of_birth" value
 * @method Profile             setGender()         Sets the current record's "gender" value
 * @method Profile             setImage()          Sets the current record's "image" value
 * @method Profile             setDescription()    Sets the current record's "description" value
 * @method Profile             setType()           Sets the current record's "type" value
 * @method Profile             setBloodType()      Sets the current record's "blood_type" value
 * @method Profile             setMaritalStatus()  Sets the current record's "marital_status" value
 * @method Profile             setActive()         Sets the current record's "active" value
 * @method Profile             setPatients()       Sets the current record's "Patients" collection
 * @method Profile             setWeights()        Sets the current record's "Weights" collection
 * @method Profile             setHeights()        Sets the current record's "Heights" collection
 * @method Profile             setTreatments()     Sets the current record's "Treatments" collection
 * @method Profile             setPatientProfile() Sets the current record's "PatientProfile" collection
 * 
 * @package    saludonline
 * @subpackage model
 * @author     David Joan Tataje Mendoza <dtataje@datasolutions.pe>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfile extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_profile');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('dni', 'string', 8, array(
             'type' => 'string',
             'length' => 8,
             'notnull' => true,
             ));
        $this->hasColumn('firstname', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('lastname', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('date_of_birth', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('gender', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             ));
        $this->hasColumn('image', 'string', 105, array(
             'type' => 'string',
             'length' => 105,
             'notnull' => true,
             ));
        $this->hasColumn('description', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('type', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             ));
        $this->hasColumn('blood_type', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             ));
        $this->hasColumn('marital_status', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             ));
        $this->hasColumn('active', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('i_firstname', array(
             'fields' => 
             array(
              0 => 'firstname',
             ),
             ));
        $this->index('u_dni', array(
             'fields' => 
             array(
              0 => 'dni',
             ),
             'type' => 'unique',
             ));
        $this->index('i_gender', array(
             'fields' => 
             array(
              0 => 'gender',
             ),
             ));
        $this->index('i_active', array(
             'fields' => 
             array(
              0 => 'active',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Patient as Patients', array(
             'refClass' => 'PatientProfile',
             'local' => 'profile_id',
             'foreign' => 'patient_id'));

        $this->hasMany('Weight as Weights', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Height as Heights', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('Treatment as Treatments', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $this->hasMany('PatientProfile', array(
             'local' => 'id',
             'foreign' => 'profile_id'));

        $sluggableext0 = new Doctrine_Template_SluggableExt(array(
             'fields' => 
             array(
              0 => 'firstname',
              1 => 'lastname',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggableext0);
        $this->actAs($timestampable0);
    }
}