<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $post_id
 * @property integer $user_id
 * @property string $author_name
 * @property string $author_email
 * @property string $author_url
 * @property string $author_twitter_username
 * @property string $author_ip
 * @property string $content
 * @property datetime $datetime
 * @property string $agent
 * @property string $approved
 * @property Post $Post
 * @property User $User
 * 
 * @method integer  getId()                      Returns the current record's "id" value
 * @method integer  getPostId()                  Returns the current record's "post_id" value
 * @method integer  getUserId()                  Returns the current record's "user_id" value
 * @method string   getAuthorName()              Returns the current record's "author_name" value
 * @method string   getAuthorEmail()             Returns the current record's "author_email" value
 * @method string   getAuthorUrl()               Returns the current record's "author_url" value
 * @method string   getAuthorTwitterUsername()   Returns the current record's "author_twitter_username" value
 * @method string   getAuthorIp()                Returns the current record's "author_ip" value
 * @method string   getContent()                 Returns the current record's "content" value
 * @method datetime getDatetime()                Returns the current record's "datetime" value
 * @method string   getAgent()                   Returns the current record's "agent" value
 * @method string   getApproved()                Returns the current record's "approved" value
 * @method Post     getPost()                    Returns the current record's "Post" value
 * @method User     getUser()                    Returns the current record's "User" value
 * @method Comment  setId()                      Sets the current record's "id" value
 * @method Comment  setPostId()                  Sets the current record's "post_id" value
 * @method Comment  setUserId()                  Sets the current record's "user_id" value
 * @method Comment  setAuthorName()              Sets the current record's "author_name" value
 * @method Comment  setAuthorEmail()             Sets the current record's "author_email" value
 * @method Comment  setAuthorUrl()               Sets the current record's "author_url" value
 * @method Comment  setAuthorTwitterUsername()   Sets the current record's "author_twitter_username" value
 * @method Comment  setAuthorIp()                Sets the current record's "author_ip" value
 * @method Comment  setContent()                 Sets the current record's "content" value
 * @method Comment  setDatetime()                Sets the current record's "datetime" value
 * @method Comment  setAgent()                   Sets the current record's "agent" value
 * @method Comment  setApproved()                Sets the current record's "approved" value
 * @method Comment  setPost()                    Sets the current record's "Post" value
 * @method Comment  setUser()                    Sets the current record's "User" value
 * 
 * @package    saludonline
 * @subpackage model
 * @author     David Joan Tataje Mendoza <dtataje@datasolutions.pe>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_comment');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('post_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'notnull' => true,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             ));
        $this->hasColumn('author_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('author_email', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('author_url', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('author_twitter_username', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('author_ip', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'notnull' => true,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             'notnull' => true,
             ));
        $this->hasColumn('datetime', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('agent', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'notnull' => true,
             ));
        $this->hasColumn('approved', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => 1,
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('i_author_name', array(
             'fields' => 
             array(
              0 => 'author_name',
             ),
             ));
        $this->index('i_author_email', array(
             'fields' => 
             array(
              0 => 'author_email',
             ),
             ));
        $this->index('i_author_url', array(
             'fields' => 
             array(
              0 => 'author_url',
             ),
             ));
        $this->index('i_author_twitter_username', array(
             'fields' => 
             array(
              0 => 'author_twitter_username',
             ),
             ));
        $this->index('i_author_ip', array(
             'fields' => 
             array(
              0 => 'author_ip',
             ),
             ));
        $this->index('i_content', array(
             'fields' => 
             array(
              'content' => 
              array(
              'length' => 200,
              ),
             ),
             ));
        $this->index('i_datetime', array(
             'fields' => 
             array(
              0 => 'datetime',
             ),
             ));
        $this->index('i_approved', array(
             'fields' => 
             array(
              0 => 'approved',
             ),
             ));
        $this->option('symfony', array(
             'filter' => false,
             'form' => true,
             ));
        $this->option('boolean_columns', array(
             0 => 'approved',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Post', array(
             'local' => 'post_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $sluggableext0 = new Doctrine_Template_SluggableExt(array(
             'fields' => 
             array(
              0 => 'author_name',
              1 => 'datetime',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggableext0);
        $this->actAs($timestampable0);
    }
}