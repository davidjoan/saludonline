<?php

/**
 * BaseDoctorPatient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $doctor_id
 * @property integer $patient_id
 * @property Doctor $Doctor
 * @property Patient $Patient
 * 
 * @method integer       getDoctorId()   Returns the current record's "doctor_id" value
 * @method integer       getPatientId()  Returns the current record's "patient_id" value
 * @method Doctor        getDoctor()     Returns the current record's "Doctor" value
 * @method Patient       getPatient()    Returns the current record's "Patient" value
 * @method DoctorPatient setDoctorId()   Sets the current record's "doctor_id" value
 * @method DoctorPatient setPatientId()  Sets the current record's "patient_id" value
 * @method DoctorPatient setDoctor()     Sets the current record's "Doctor" value
 * @method DoctorPatient setPatient()    Sets the current record's "Patient" value
 * 
 * @package    saludonline
 * @subpackage model
 * @author     David Joan Tataje Mendoza <dtataje@datasolutions.pe>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDoctorPatient extends DoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('t_doctor_patient');
        $this->hasColumn('doctor_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));
        $this->hasColumn('patient_id', 'integer', 20, array(
             'type' => 'integer',
             'length' => 20,
             'primary' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             'form' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Doctor', array(
             'local' => 'doctor_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasOne('Patient', array(
             'local' => 'patient_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'updated' => 
             array(
              'disabled' => true,
             ),
             ));
        $this->actAs($timestampable0);
    }
}