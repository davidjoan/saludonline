<?php

/**
 * Profile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    saludonline
 * @subpackage model
 * @author     David Joan Tataje Mendoza <dtataje@datasolutions.pe>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Profile extends BaseProfile
{
  public function getTypeStr()
  {  	
    $genders = $this->getTable()->getTypes();
    return $genders[$this->getType()];
  }
    public function getGenderStr()
  {  	
    $genders = $this->getTable()->getGenders();
    return $genders[$this->getGender()];
  }
  
  public function getBloodTypeStr()
  {  	
    $blood_types = $this->getTable()->getBloodTypes();
    return $blood_types[$this->getBloodType()];
  }  
  
  public function getMaritalStatusStr()
  {  	
    $marital_statuss = $this->getTable()->getMaritalStatuss();
    return $marital_statuss[$this->getMaritalStatus()];
  }  
  
  public function generateImageFilename($file)
  {    
    return Stringkit::fixFilename($file->getOriginalName()).'_'.rand(11111, 99999).$file->getOriginalExtension();
  }
  
  public function getFullname()
  {
    return sprintf("%s %s",$this->getFirstname(),$this->getLastname());
  }

  public function getFormattedDateOfBirth($format = 'D')
  {
    return $this->getTable()->getDateTimeFormatter()->format($this->getDateOfBirth(), $format);
  }  
  
  public function findMyLastWeights($cant = 4, $order = 'DESC')
  {
      return Doctrine::getTable('Weight')->findLastWeights($cant,$this->getId(),$order);
  }
  
  public function findMyLastHeights($cant = 4, $order = 'DESC')
  {
      return Doctrine::getTable('Height')->findLastHeights($cant,$this->getId(),$order);
  }  
  public function findMyLastTreatments()
  {
      return Doctrine::getTable('Treatment')->findLastTreatments(4,$this->getId());
  }    
  
  public function getWeightJson()
  {
    $data = Array();
    foreach($this->findMyLastWeights(10, 'ASC') as $weight) 
    {
      array_push($data,$weight->getCurrentWeight());
    }
    return implode(',',$data);
  }
  
  public function getExpectedWeightJson()
  {
    $data = Array();
    foreach($this->getWeights() as $weight) 
    {
      array_push($data,$weight->getExpectedWeight());
    }
    return implode(',',$data);
  }  
  public function getDateOfWeightJson()
  {
    $data = Array();
    foreach($this->findMyLastWeights(10, 'ASC') as $weight) 
    {
      array_push($data,"'".date("F Y",strtotime($weight->getDateOfWeight()))."'");
    }
    return implode(',',$data);
  }    
  public function getDateOfHeightJson()
  {
    $data = Array();
    foreach($this->findMyLastHeights(10, 'ASC') as $height) 
    {
      array_push($data,"'".date("F Y",strtotime($height->getDateOfHeight()))."'");
    }
    return implode(',',$data);
  }    
    
  
  public function getHeightJson()
  {
    $data = Array();
    foreach($this->findMyLastHeights(10, 'ASC') as $height) 
    {
      array_push($data,$height->getCurrentHeight());
    }
    return implode(',',$data);
  }
  
  public function getReportDoctors()
  {
  	$doctors = $this->getPatients()->getFirst()->getDoctors();
  	$data = null;
  	
  	foreach($doctors as $key => $doctor)
  	{
          $data[$key] = array($doctor->getFullname(), $doctor->getSpecialty()->getName(),$doctor->getEmail(), $doctor->getOfficePhone());
  	}
  	
  	return $data;
  }  
  public function getReportContacts()
  {
  	$doctors = $this->getPatients()->getFirst()->getContacts();
  	$data = null;
  	
  	foreach($doctors as $key => $doctor)
  	{
          $data[$key] = array($doctor->getFullname(), $doctor->getGenderStr(),$doctor->getEmail(), $doctor->getHomePhone());
  	}
  	
  	return $data;
  }  
}